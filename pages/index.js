import Head from 'next/head'
import styles from '../styles/Home.module.css'
import {useState} from "react";
import axios from "axios";


const url = 'https://todoapp-nextjs-sv0.vercel.app/'


export default function Home(props) {
    const [tasks, setTasks] = useState(props.tasks);
    const [task, setTask] = useState({task: ""});

    const handleChange = ({currentTarget: input}) => {
        input.value === '' ? setTask({task: ''}) : setTask((prev) => ({...prev, task: input.value}))
    }

    const editTask = (id) => {
        const currentTask = tasks.find((task) => task._id === id)
        setTask(currentTask)
    }

    const addTask = async (e) => {
        e.preventDefault()
        try {
            if (task._id) {
                const {data} = await axios.put(url + "/" + task._id, {
                    task: task.task,
                });
                const originalTasks = [...tasks];
                const index = originalTasks.findIndex((t) => t._id === task._id)
                originalTasks[index] = data.data
                setTasks(originalTasks)
                setTask({task: ""})
                console.log(data.message)
            } else {
                const {data} = await axios.post(url, task)
                setTasks(prev => [...prev, data.data])
                setTask({task: ""})
                console.log(data.message)
            }
        } catch (error) {
            console.log(error)
        }
    }

    const updateTask = async (id) => {
        try {
            const originalTasks = [...tasks];
            const index = originalTasks.findIndex((t) => t._id === id);
            const {data} = await axios.put(url + "/" + id, {
                completed: !originalTasks[index].completed,
            });
            originalTasks[index] = data.data;
            setTasks(originalTasks);
            console.log(data.message);
        } catch (error) {
            console.log(error);
        }
    }


    const deleteTask = async (id) => {
        const {data} = await axios.delete(url + "/" + id)
        setTasks(prev => prev.filter(task => task._id !== id))
        console.log(data.message)
    }


    return (<main className={styles.main}>
        <Head>
            <title>Create Next App</title>
            <meta name="description" content="Generated by create next app"/>
            <link rel="icon" href="/favicon.ico"/>
        </Head>
        <h1 className={styles.heading}>TO-DO</h1>
        <div className={styles.container}>
            <form className={styles.form_container} onSubmit={addTask}>
                <input className={styles.input} type={"text"} placeholder={"Enter task Name"}
                       value={task.task} onChange={handleChange}/>
                <button type={"submit"}
                        className={styles.submit_btn}>{task._id ? "Update" : "Add"}
                </button>
            </form>
            {tasks?.map((item) => (<div className={styles.task_container} key={item._id}>
                <input
                    type="checkbox"
                    className={styles.check_box}
                    checked={item.completed}
                    onChange={() => updateTask(item._id)}
                />
                <p className={item.completed ? styles.task_text + " " + styles.line_through : styles.task_text}>
                    {item.task}
                </p>
                <button className={styles.edit_task} onClick={() => editTask(item._id)}>&#9998;</button>
                <button className={styles.remove_task} onClick={() => deleteTask(item._id)}>&#10006;</button>
            </div>))}
            {tasks?.length === 0 && <h2 className={styles.no_tasks}>Add Some tasks</h2>}
        </div>
    </main>)
}


export const getServerSideProps = async () => {
    const {data} = await axios.get(url)
    return {props: {tasks: data?.data}}
}
